---
layout: post
title: time data
description:
date:   2022-12-03 15:01:35 +0300
author: nolan
image:  '/images/17.jpg'
tags:   [cicd, migration]
tags_color: '#477690'
---
CICD 의 시나리오를 정리한다.

지금까지 정리한 것들은 단순히 각 기술별로 예제를 정리한 것이었는데, 이렇게 정리하는 경우에 나중에 다시 찾아보거나, 활용하는 경우가 거의 없었다. 큰 맥락에서 흐름을 정리하는 것이 더 나은 정리 방법인거 같다. 블로그 형태로 정리하는 것이 관리가 쉬울거 같다.

배포시점에 테이블 스키마의 변경이 있는 경우, 기존 API와의 호환성을 유지시키는 것이 까다로운 부분이다. 이런 경우에 신규 API가 이용하는 스키마를 새로 작성하는 것이 여러모로 깔끔하지만, 스키마의 일부분만 변경되는 경우라면, 예를 들어서 roll out이라면, 배포시점에 서비스의 버전이 신/구가 혼재하는 상황이 벌어지기 때문에 구 API가 동작하도록 스키마를 유지시키고, 배포가 완료되는 시점에 더이상 사용되지 않는 스키마를 삭제처리하는 방법을 선택할 수도 있다.

